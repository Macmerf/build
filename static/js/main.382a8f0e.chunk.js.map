{"version":3,"sources":["img/Photo.png","serviceWorker.js","components/Good.js","components/data.js","components/GoodsList.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Good","props","buyElem","bind","state","shape","hovelem","hovelemStyle","color","consis","def","className","style","onClick","enb","textAfter","dis","taste","actElem","disAsctElem","this","setState","onMouseEnter","onMouseLeave","numbf","qty","numbs","gifts","src","Photo","alt","numbt","weight","React","Component","numb","GoodList","foodcart","map","good","index","key","ReactDOM","render","StrictMode","GoodsList","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.382a8f0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Photo.a1a67b20.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport  Photo from '../img/Photo.png'\r\nimport '../index.css'\r\n//import foodcart from './data'\r\nexport default class Good extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.buyElem=this.buyElem.bind(this)\r\n        this.state={\r\n            shape:this.props.shape,\r\n            hovelem:this.props.hovelem,\r\n            hovelemStyle: {color: '#666666', },\r\n            consis:{\r\n            def:<p className='textafter' style ={{ color: '#ffff'}}>Чего сидишь? Порадуй котэ, <span className='buyit' onClick ={this.buyElem} >\r\n                купи</span><span style={{ color: '#1698d9'}}>.</span></p>,\r\n            enb:<p className='textafter' style ={{ color: '#ffff'}} >{this.props.textAfter}</p>,\r\n            dis:<p className='textafter' style ={{ color: '#ffff66'}}> Печалька, {this.props.taste} закончился.</p>\r\n            }\r\n        }\r\n        \r\n        this.actElem=this.actElem.bind(this)\r\n        this.disAsctElem= this.disAsctElem.bind(this)\r\n    }\r\n    \r\n    buyElem(){\r\n        if(this.state.shape ==='default'){\r\n            this.setState({shape:'enable'})\r\n        }else if(this.state.shape ==='enable'){\r\n            this.setState({shape:'default'})\r\n            this.setState({hovelem:this.props.hovelem})\r\n            this.setState({hovelemStyle:{color: '#666666'}})\r\n        }\r\n    }\r\n\r\n    actElem(){\r\n        if(this.state.shape ==='enable'){\r\n            this.setState({hovelem:'Котэ не одобряет?'}) \r\n            this.setState({hovelemStyle:{color: '#d91667'}})\r\n        }\r\n    }\r\n\r\n    disAsctElem(){\r\n        if(this.state.shape ==='enable'){\r\n            this.setState({hovelem:this.props.hovelem}) \r\n        this.setState({hovelemStyle:{color: '#666666'}}) }\r\n    }\r\n    \r\n\r\n    render(){\r\n    return(\r\n        <div className = 'good' >\r\n        <div className={this.state.shape} \r\n                onClick ={this.buyElem} \r\n                onMouseEnter ={this.actElem}\r\n                onMouseLeave ={this.disAsctElem}\r\n                >\r\n            <p className='foodfirst'\r\n                style={this.state.hovelemStyle}\r\n            >{this.state.hovelem}</p>\r\n            <h2 className='foodsecond'>Нямушка</h2>\r\n            <h3 className='foodthird'>{this.props.taste}</h3>\r\n            <p className='foodforth'><strong>{this.props.numbf}</strong>{this.props.qty}</p>\r\n            <p className='foodfifth'><strong>{this.props.numbs}</strong>{this.props.gifts}</p>\r\n            <img src ={Photo} alt='Cat' className='foodsixth'/>\r\n            <div  className='foodseventh'><h4><span>{this.props.numbt}</span><br/>{this.props.weight}</h4></div>\r\n        </div>\r\n            {this.state.shape ==='default' ? this.state.consis.def: this.state.shape ==='enable'? this.state.consis.enb: this.state.consis.dis}\r\n        </div>\r\n        )\r\n}\r\n}","export default[\r\n    {\r\n        hovelem:'Сказочное заморское яство',\r\n        taste: 'с фуа-гра',\r\n        qty: ' порций',\r\n        numb: [10,'','0,5'],\r\n        gifts:'мышь в подарок',\r\n        weight: ' кг',\r\n        shape:'default',\r\n        textAfter:'Печень утки разварная с артишоками.'\r\n\r\n    },\r\n    {   \r\n        hovelem:'Сказочное заморское яство',\r\n        taste: 'с рыбой',\r\n        qty:' порций',\r\n        numb: [40,2,2],\r\n        gifts:' мыши в подарок',\r\n        weight: ' кг' ,\r\n        shape:'enable',\r\n        textAfter:'Головы щучьи с чесноком да свежайшая сёмгушка.'\r\n    },\r\n    {   hovelem:'Сказочное заморское яство',\r\n        taste: 'с курой',\r\n        qty:' порций',\r\n        numb: [100,5,5],\r\n        gifts:' мышей в подарок заказчк доволен',\r\n        weight: ' кг',\r\n        shape: 'disabled',\r\n        textAfter:'Филе из цыплят с трюфелями в бульоне.'\r\n    }\r\n    \r\n]","import React from 'react'\r\nimport '../index.css'\r\nimport Good from './Good'\r\nimport foodcart from './data'\r\n    class GoodList extends React.Component{\r\n        render(){\r\n            return <div className='app'>\r\n                <h1>Ты сегодня покормил кота?</h1>\r\n                <div className ='Goodlist' >\r\n                {foodcart.map((good,index)=>\r\n                <Good \r\n                    textAfter ={good.textAfter}\r\n                    hovelem={good.hovelem}\r\n                    shape={good.shape}\r\n                    key ={index}\r\n                    taste ={good.taste}\r\n                    qty ={good.qty} \r\n                    gifts={good.gifts}\r\n                    weight={good.weight}\r\n                    numbf ={good.numb[0]}\r\n                    numbs ={good.numb[1]}\r\n                    numbt ={good.numb[2]}\r\n                />)\r\n                }\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n\r\nexport default GoodList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts/fonts.css';\nimport './reset.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport GoodsList from './components/GoodsList'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GoodsList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}